import 'package:flutter/material.dart';

void main() {
  runApp(SongListApp());
}

class SongListApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Song List',
      home: SongListScreen(),
      debugShowCheckedModeBanner: false,
    );
  }
}

class Song {
  final String imageUrl;
  final String name;
  final String singer;
  final String category;

  Song({
    required this.imageUrl,
    required this.name,
    required this.singer,
    required this.category,
  });
}

class SongListScreen extends StatelessWidget {
  final List<Song> songs = [
    Song(
      imageUrl: 'https://via.placeholder.com/100',
      name: 'Shape of You',
      singer: 'Ed Sheeran',
      category: 'Pop',
    ),
    Song(
      imageUrl: 'https://via.placeholder.com/100',
      name: 'Blinding Lights',
      singer: 'The Weeknd',
      category: 'Synthwave',
    ),
    Song(
      imageUrl: 'https://via.placeholder.com/100',
      name: 'Levitating',
      singer: 'Dua Lipa',
      category: 'Dance',
    ),
    Song(
      imageUrl: 'https://via.placeholder.com/100',
      name: 'Perfect',
      singer: 'Ed Sheeran',
      category: 'Romantic',
    ),
    Song(
      imageUrl: 'https://via.placeholder.com/100',
      name: 'Stay',
      singer: 'Justin Bieber',
      category: 'Pop',
    ),
    Song(
      imageUrl: 'https://via.placeholder.com/100',
      name: 'Peaches',
      singer: 'Justin Bieber',
      category: 'R&B',
    ),
    Song(
      imageUrl: 'https://via.placeholder.com/100',
      name: 'Senorita',
      singer: 'Shawn Mendes',
      category: 'Latin Pop',
    ),
    Song(
      imageUrl: 'https://via.placeholder.com/100',
      name: 'Montero',
      singer: 'Lil Nas X',
      category: 'Hip-Hop',
    ),
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text('Song List')),
      body: ListView.builder(
        itemCount: songs.length,
        itemBuilder: (context, index) {
          final song = songs[index];
          return Card(
            margin: EdgeInsets.all(10),
            child: Padding(
              padding: EdgeInsets.all(10),
              child: Row(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Image.network(
                    song.imageUrl,
                    width: 100,
                    height: 100,
                    fit: BoxFit.cover,
                  ),
                  SizedBox(width: 20),
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      Text('Song Name: ${song.name}',
                          style: TextStyle(fontWeight: FontWeight.bold)),
                      Text('Singer: ${song.singer}'),
                      Text('Category: ${song.category}'),
                    ],
                  ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}
